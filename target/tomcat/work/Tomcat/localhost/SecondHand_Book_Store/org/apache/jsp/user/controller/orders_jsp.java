/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.47
 * Generated at: 2022-04-28 05:33:43 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.user.controller;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.io.*;
import java.util.*;
import java.util.Date;
import java.text.*;
import javax.servlet.*;
import java.sql.*;
import java.util.*;

public final class orders_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(1);
    _jspx_dependants.put("/user/controller/./connection.jsp", Long.valueOf(1648636637019L));
  }

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");

    Connection connection = null;
    try {

        //Class.forName("com.mysql.jdbc.Driver"); This is deprecated
        Class.forName("com.mysql.cj.jdbc.Driver");
        connection = DriverManager.getConnection("jdbc:mysql://localhost:3306/secondhand_book", "root", "");
        String sql = "";

    } catch (Exception e) {
        System.out.println(e);
    }

      out.write('\n');
      out.write("\r\n");
      out.write("\r\n");

    String book_no = request.getParameter("book_no");
    String[] book_arr = book_no.split("_");

    String buyerName = request.getParameter("buyerName");
    String buyerEmail = (String)session.getAttribute("email");
    String mobileNo = request.getParameter("mobileNo");
    String address = request.getParameter("address");
    String status = "Success";

    

    String paymentMode = request.getParameter("paymentMode");
    String orderId = (int)(Math.random() * 100) + mobileNo;
    Date date = new Date();
    SimpleDateFormat uft = new SimpleDateFormat ("dd-MM-YYYY");
    String sellingDate = uft.format(date);

    try{

        for(int i=0; i<book_arr.length; i++){
            String bno = book_arr[i];
            
            String sql3 = "Select * from books where bno='"+bno+"'";
            Statement st3 = connection.createStatement();
            ResultSet rs3 = st3.executeQuery(sql3);
            rs3.next();
            int price = Integer.parseInt(rs3.getString("selling_price"))+40;

            String sql = "insert into orders(order_no,order_id,buyer_name,buyer_email,mobile_no,address,book_no,price,payment_mode,selling_date,status) values(?,?,?,?,?,?,?,?,?,?,?)";

            PreparedStatement ps = connection.prepareStatement(sql);
            ps.setString(1,null);
            ps.setString(2,orderId);
            ps.setString(3,buyerName);
            ps.setString(4,buyerEmail);
            ps.setString(5,mobileNo);
            ps.setString(6,address);
            ps.setString(7,bno);
            ps.setInt(8,price);
            ps.setString(9,paymentMode);
            ps.setString(10,sellingDate);
            ps.setString(11,status);
            ps.executeUpdate();

            String sql2 = "update books set status=?,selling_date=? where bno=?";
            PreparedStatement ps2 = connection.prepareStatement(sql2);
            ps2.setString(1,"Pending");
            ps2.setString(2,sellingDate);
            ps2.setString(3,bno);
            ps2.executeUpdate();
        }
        response.sendRedirect("../orderConfirm.jsp?orderId="+orderId+"");
    }catch(Exception e){
        out.print(e);
    }

    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try { out.clearBuffer(); } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
